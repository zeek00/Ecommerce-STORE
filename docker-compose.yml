name: Deploy to ECR and EKS
on:
  push:
    branches: [master]

env:
  AWS_REGION: eu-west-2

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and tag Docker images
        env:
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker-compose -f docker-compose.yml build --parallel
          docker-compose -f docker-compose.yml push

          for service in nginx api client; do
            docker tag "shoopp_${service}" "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/shoopp_${service}:${IMAGE_TAG}"
          done

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com"
          username: AWS
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Docker images to Amazon ECR
        run: |
          docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/shoopp_nginx:${IMAGE_TAG}"
          docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/shoopp_api:${IMAGE_TAG}"
          docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/shoopp_client:${IMAGE_TAG}"

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy to Amazon EKS
        run: |
          sed -i.bak "s|DOCKER_IMAGE|${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/shoopp_nginx:${IMAGE_TAG}|g" manifests/shoopp-deployment.yaml
          kubectl apply -f manifests/shoopp-deployment.yaml

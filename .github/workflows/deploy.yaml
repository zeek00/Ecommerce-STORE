name: Deploy to ECR and EKS
on:
  push:
    branches: [master]

env:
  AWS_REGION: eu-west-2

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set region ${{secrets.AWS_REGION}}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{secrets.AWS_REGION}} | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com

      - name: Build and push Docker images using docker files
        env:
          AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
          ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY}}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          SECRET: ${{ secrets.SECRET }}
          TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
          VERIFALIA_USER: ${{ secrets.VERIFALIA_USER }}
          VERIFALIA_PASS: ${{ secrets.VERIFALIA_PASS }}
          PORT: ${{ secrets.PORT }}
        run: |
          docker-compose -f docker-compose.yml up --build \
          && docker tag $AWS_ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:shoopp-${IMAGE_TAG} 
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{secrets.EKS_CLUSTER_NAME}} --region ${{secrets.AWS_REGION}}

      - name: Deploy to Amazon EKS
        env:
          ECR_REGISTRY: ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com
          ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY}}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          sed -i.bak "s|DOCKER_IMAGE_API|${ECR_REGISTRY}/${ECR_REPOSITORY}:api-${IMAGE_TAG}|g; s|DOCKER_IMAGE_NGINX|${ECR_REGISTRY}/${ECR_REPOSITORY}:nginx-${IMAGE_TAG}|g; s|DOCKER_IMAGE_CLIENT|${ECR_REGISTRY}/${ECR_REPOSITORY}:client-${IMAGE_TAG}|g" manifests/shoopp-deployment.yaml
          
          kubectl apply -f manifests/shoopp-deployment.yaml

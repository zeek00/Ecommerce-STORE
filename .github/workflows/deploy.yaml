name: Deploy to ECR and EKS
on:
  push:
    branches: [master]

env:
  AWS_REGION: eu-west-2

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image to Amazon ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ECR_REPOSITORY: shoopp
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
          
=          docker buildx build --file Dockerfile --tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shoopp:$IMAGE_TAG .

=          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shoopp:$IMAGE_TAG

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{secrets.EKS_CLUSTER_NAME}} --region $AWS_REGION

      - name: Deploy to Amazon EKS
        env:
          ECR_REGISTRY: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
          ECR_REPOSITORY: shoopp
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          sed -i.bak "s|DOCKER_IMAGE|${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}|g" manifests/shoopp-deployment.yaml
          kubectl apply -f manifests/shoopp-deployment.yaml
